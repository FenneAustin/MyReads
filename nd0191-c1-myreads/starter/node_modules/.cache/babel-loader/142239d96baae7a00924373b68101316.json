{"ast":null,"code":"var _jsxFileName = \"/home/austin/Udacity/MyReads/nd0191-c1-myreads/starter/src/components/ListBooks/index.js\",\n    _s = $RefreshSig$();\n\nimport CurrentReading from \"../BookShelf/CurrentReading/index.js\";\nimport WantToRead from \"../BookShelf/WantToRead/index.js\";\nimport Read from \"../BookShelf/Read/index.js\";\nimport { useState } from \"react\";\nimport { CurrentReadingShelf, WantToReadShelf, ReadShelf } from \"../../Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooks = props => {\n  _s();\n\n  const searchPage = props.searchPage;\n  const [CurrentReadings, setCurrentReadings] = useState(CurrentReadingShelf);\n  const [WantToReads, setWantToReads] = useState(WantToReadShelf);\n  const [Reads, setReads] = useState(ReadShelf);\n\n  const handleShelfUpdate = (book, oldshelf, newshelf) => {\n    let index = findIndex(book, oldshelf);\n    removeFromShelf(index, oldshelf);\n    addToShelf(book, newshelf);\n  };\n\n  const findIndex = (book, oldshelf) => {\n    let index;\n\n    if (oldshelf === \"currentReading\") {\n      index = CurrentReadings.findIndex(object => {\n        return object.title === book.title;\n      });\n    }\n\n    if (oldshelf === 'wantToRead') {\n      index = WantToReads.findIndex(object => {\n        return object.title === book.title;\n      });\n    }\n\n    if (oldshelf === 'read') {\n      index = Reads.findIndex(object => {\n        return object.title === book.title;\n      });\n    }\n\n    return index;\n  };\n\n  const removeFromShelf = (index, oldshelf) => {\n    if (oldshelf === \"currentReading\") {\n      setCurrentReadings([...CurrentReadings.slice(0, index), ...CurrentReadings.slice(index + 1, CurrentReadings.length)]);\n    }\n\n    if (oldshelf === \"wantToRead\") {\n      setWantToReads([...WantToReads.slice(0, index), ...WantToReads.slice(index + 1, WantToReads.length)]);\n    }\n\n    if (oldshelf === \"read\") {\n      setReads([...Reads.slice(0, index), ...Reads.slice(index + 1, Reads.length)]);\n    }\n  };\n\n  const addToShelf = (book, newshelf) => {\n    if (newshelf === 'currentReading') {}\n\n    if (newshelf === '') {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyReads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CurrentReading, {\n          books: CurrentReadings,\n          UpdateShelf: handleShelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WantToRead, {\n          books: WantToReads,\n          UpdateShelf: handleShelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Read, {\n          books: Reads,\n          UpdateShelf: handleShelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"open-search\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchPage,\n        children: \"Add a book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListBooks, \"EsipL5RdoEK9lEW9yjS3cFql6vo=\");\n\n_c = ListBooks;\nexport default ListBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooks\");","map":{"version":3,"sources":["/home/austin/Udacity/MyReads/nd0191-c1-myreads/starter/src/components/ListBooks/index.js"],"names":["CurrentReading","WantToRead","Read","useState","CurrentReadingShelf","WantToReadShelf","ReadShelf","ListBooks","props","searchPage","CurrentReadings","setCurrentReadings","WantToReads","setWantToReads","Reads","setReads","handleShelfUpdate","book","oldshelf","newshelf","index","findIndex","removeFromShelf","addToShelf","object","title","slice","length"],"mappings":"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","sourcesContent":["import CurrentReading from \"../BookShelf/CurrentReading/index.js\";\nimport WantToRead from \"../BookShelf/WantToRead/index.js\";\nimport Read from \"../BookShelf/Read/index.js\";\nimport { useState } from \"react\";\nimport { CurrentReadingShelf, WantToReadShelf, ReadShelf } from \"../../Data\";\n\nconst ListBooks = (props) => {\n  const searchPage = props.searchPage;\n\n  const [CurrentReadings, setCurrentReadings] = useState(CurrentReadingShelf);\n  const [WantToReads, setWantToReads] = useState(WantToReadShelf);\n  const [Reads, setReads] = useState(ReadShelf);\n\n  const handleShelfUpdate = (book, oldshelf, newshelf) => {\n    let index = findIndex(book, oldshelf);\n    removeFromShelf(index, oldshelf);\n    addToShelf(book, newshelf);\n  };\n\n  const findIndex = (book, oldshelf) => {\n    let index;\n    if (oldshelf === \"currentReading\"){\n      index = CurrentReadings.findIndex(object => {\n        return object.title === book.title\n      })\n    }\n    if(oldshelf === 'wantToRead'){\n            index = WantToReads.findIndex((object) => {\n              return object.title === book.title;\n            });\n    }\n    if(oldshelf === 'read'){\n      index = Reads.findIndex((object) => {\n        return object.title === book.title;\n      });\n    }\n\n    return index;\n  };\n\n  const removeFromShelf = (index, oldshelf) => {\n    if (oldshelf === \"currentReading\") {\n      setCurrentReadings([\n        ...CurrentReadings.slice(0, index),\n        ...CurrentReadings.slice(index + 1, CurrentReadings.length),\n      ]);\n    }\n    if (oldshelf === \"wantToRead\") {\n      setWantToReads([\n        ...WantToReads.slice(0, index),\n        ...WantToReads.slice(index + 1, WantToReads.length),\n      ]);\n    }\n    if (oldshelf === \"read\") {\n      setReads([\n        ...Reads.slice(0, index),\n        ...Reads.slice(index + 1, Reads.length),\n      ]);\n    }\n  };\n\n  const addToShelf = (book, newshelf) => {\n    if(newshelf === 'currentReading'){\n\n    }\n    if(newshelf === ''){\n\n    }\n  };\n\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        <div>\n          <CurrentReading\n            books={CurrentReadings}\n            UpdateShelf={handleShelfUpdate}\n          />\n          <WantToRead books={WantToReads} UpdateShelf={handleShelfUpdate} />\n          <Read books={Reads} UpdateShelf={handleShelfUpdate} />\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <button onClick={searchPage}>Add a book</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ListBooks;\n"]},"metadata":{},"sourceType":"module"}